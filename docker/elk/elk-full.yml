version: "3.0"
services:
  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=MyPw123
      - xpack.security.enabled=true
    networks:
      - es-net
    volumes:
      - D:\docker\elk:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=MyPw123
    networks:
      - es-net
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
  apm-server:
    container_name: apm-container
    image: docker.elastic.co/apm/apm-server:7.11.0
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    networks:
    - es-net
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kb-container:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.secret_token=123321
         -E apm-server.kibana.host=kb-container:5601
         -E apm-server.kibana.ssl.username:"elastic"
         -E apm-server.kibana.ssl.password:"MyPw123"
         -E apm-server.kibana.ssl.enabled:false
         -E output.elasticsearch.hosts=["es-container:9200"]
         -E output.elasticsearch.username="elastic"
         -E output.elasticsearch.password="MyPw123"
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
  logstash:
    container_name: ls-container
    image: docker.elastic.co/logstash/logstash:7.11.0
    networks:
      - es-net
    depends_on:
      - elasticsearch
    environment:
      - xpack.monitoring.elasticsearch.url="es-container:9200"
      - xpack.monitoring.elasticsearch.username="elastic"
      - xpack.monitoring.elasticsearch.password="MyPw123"
    ports:
      - 9500:9500
      - 5000:5000
      - 8080:8080
    volumes:
      - type: bind
        source: ./log/
        target: /usr/share/logstash/pipeline
        read_only: true
networks:
  es-net:
    driver: bridge